---
- name: create vpc    
  tags: [ never, vpc ]
  block:
    - ec2_vpc_net:
        name: web-application-vpc
        cidr_block: 10.1.0.0/16
        region: '{{ region }}'
      register: vpc    
    - lineinfile: 
        path: '{{ vars_all }}'
        regexp: '^vpc'
        line: 'vpc: {{ vpc.vpc.id }}'


- name: create subnets  
  tags: [ subnets ]
  block:
    - ec2_vpc_subnet:
        region: '{{ region }}'
        vpc_id: '{{ vpc }}'
        cidr: '{{ item.cidr }}'
        map_public: '{{ item.public }}'
        tags:
          Name: '{{ item.name }}'
        az: '{{ item.name }}'
      register: subnets
      with_items:
        - { cidr: '10.1.0.0/24', public: yes, name: 'webapp_public_subnet', az: 'us-east-2c' }
        - { cidr: '10.1.1.0/24', public: no, name: 'webapp_private_subnet_a', az: 'us-east-2a' }
        - { cidr: '10.1.2.0/24', public: no, name: 'webapp_private_subnet_b', az: 'us-east-2b' }
    - debug: #var=subnet
        msg: '{{ item.subnet.tags.Name }}: {{ item.subnet.id }}'
      with_items: '{{ subnets.results }}'
    - lineinfile:
        path: '{{ vars_all }}'
        regexp: '^{{ item.subnet.tags.Name }}_id'
        line: '{{ item.subnet.tags.Name }}_id: {{ item.subnet.id }}'
      with_items: '{{ subnets.results }}'


- name: vpc igw
  tags: [ igw ]
  block:
    - ec2_vpc_igw:
        region: '{{ region }}'
        vpc_id: '{{ vpc }}'
        tags:
          Name: web-application-vpc-igw
      register: igw
    - debug: var=igw
    - lineinfile:
        path: '{{ vars_all }}'
        regexp: '^igw_id'
        line: 'igw_id: {{ igw.gateway_id }}'


# only need to run once. commenting out until check logic is in place.
#- name: create eip for nat gw
#  tags: [ eip ]
#  block: 
#    - ec2_eip:
#        region: '{{ region }}'
#      register: eip
#    - lineinfile:
#        path: '{{ vars_all }}'
#        regexp: '^eip'
#        line: 'eip: {{ eip.public_ip }}'
  

- name: nat gw
  tags: [ nat ]
  block: 
    - ec2_vpc_nat_gateway:
        subnet_id: '{{ webapp_public_subnet_id }}'
        eip_address: '{{ eip }}'
        region: '{{ region }}'
      register: nat
    - debug: var=nat
    - lineinfile:
        path: '{{ vars_all }}'
        regexp: '^{{ item.regexp }}'
        line: '{{ item.line }}'
      with_items:
        - { regexp: 'nat_gw_id', line: 'nat_gw_id: {{ nat.nat_gateway_id }}' }
        - { regexp: 'nat_interface_id', line: 'nat_interface_id: {{ nat.nat_gateway_addresses[0].network_interface_id }}' }
     

- name: route tables
  tags: [ route_tables ]
  block:
    - ec2_vpc_route_table:
        vpc_id: '{{ vpc }}'
        region: '{{ region }}'
        tags:
          Name: webapp_public_route_table
        subnets:
          - '{{ webapp_public_subnet_id }}'
        routes:
          - dest: 0.0.0.0/0
            gateway_id: '{{ nat_gw_id }}'     
      register: routes
    - lineinfile:
        path: '{{ vars_all }}'
        regexp: '^route_table_id'
        line: 'route_table_id: {{ routes.route_table.id }}'
  

    
  
  





- name: destroy all
  tags: [ never, destroy_all_web_application, destroy_all_vpc ]
  block:
    - ec2_vpc_route_table:
        state: absent
        vpc_id: '{{ vpc }}'
        region: '{{ region }}'
        route_table_id: '{{ route_table_id}}'
    - ec2_vpc_nat_gateway:
        state: absent
        nat_gateway_id: '{{ nat_gw_id }}'
        region: '{{ region }}'
    - ec2_eip:
        state: absent
        region: '{{ region }}'
        device_id: '{{ nat_interface_id }}'
        ip: '{{ eip }}'
    - ec2_vpc_igw:
        vpc_id: '{{ vpc }}'
        state: absent 
    - ec2_vpc_subnet:
        vpc_id: '{{ vpc }}'
        cidr: '{{ item }}'
        region: '{{ region }}'
        state: absent
      with_items:
        - 10.1.0.0/24
        - 10.1.1.0/24
        - 10.1.2.0/24
    - ec2_vpc_net:
        name: web-application-vpc
        cidr_block: 10.1.0.0/16
        region: '{{ region }}'
        state: absent
      
      
